Terminals unused in grammar

   FUNC
   RETURN
   RETURNTYPE
   OPENBR
   CLOSEBR
   OPENCUR
   CLOSECUR
   SEPARATOR
   DECIMAL


State 11 conflicts: 9 reduce/reduce
State 60 conflicts: 20 reduce/reduce
State 62 conflicts: 2 shift/reduce
State 64 conflicts: 1 shift/reduce
State 74 conflicts: 1 shift/reduce
State 75 conflicts: 1 shift/reduce
State 76 conflicts: 1 shift/reduce
State 77 conflicts: 1 shift/reduce
State 78 conflicts: 1 shift/reduce
State 80 conflicts: 2 shift/reduce
State 89 conflicts: 2 shift/reduce, 6 reduce/reduce
State 91 conflicts: 6 shift/reduce
State 95 conflicts: 6 shift/reduce
State 98 conflicts: 9 reduce/reduce
State 101 conflicts: 1 reduce/reduce
State 114 conflicts: 9 shift/reduce


Grammar

    0 $accept: program $end

    1 $@1: /* empty */

    2 program: BEGINPROGRAM VAR COLON $@1 body

    3 body: ENDBLOCK
    4     | NEWLINE body
    5     | command NEWLINE body

    6 command: declaration
    7        | exp
    8        | assignment
    9        | loop
   10        | conditional
   11        | else
   12        | read
   13        | write

   14 declaration: declarenoassign
   15            | declareassign

   16 declarenoassign: VAR COLON INT
   17                | VAR COLON REAL
   18                | VAR COLON STRING
   19                | VAR COLON CHAR
   20                | VAR COLON BOOLEAN

   21 declareassign: VAR COLON INT ASSIGN INT_NUMBER
   22              | VAR COLON REAL ASSIGN REAL_NUMBER
   23              | VAR COLON STRING ASSIGN STR
   24              | VAR COLON CHAR ASSIGN CHARACTER
   25              | VAR COLON BOOLEAN ASSIGN TRUE
   26              | VAR COLON BOOLEAN ASSIGN FALSE

   27 $@2: /* empty */

   28 declareassign: VAR COLON datatype ASSIGN VAR $@2 VAR COLON datatype ASSIGN value

   29 datatype: STRING
   30         | BOOLEAN
   31         | INT
   32         | REAL
   33         | CHAR

   34 value: literal
   35      | exp
   36      | read

   37 literal: num
   38        | STR
   39        | CHARACTER
   40        | bool

   41 num: REAL_NUMBER
   42    | INT_NUMBER

   43 bool: TRUE
   44     | FALSE

   45 exp: VAR
   46    | arithmetic
   47    | logic
   48    | relation

   49 arithmetic: arithmetic operation arithmetic
   50           | num
   51           | VAR
   52           | par arithmetic par

   53 par: OPENPAR
   54    | CLOSEPAR

   55 operation: SUM
   56          | SUBTRACTION
   57          | MULTIPLICATION
   58          | DIVISION
   59          | EXPONENTIATION
   60          | RESTDIV

   61 logic: par exp par
   62      | negs VAR
   63      | exp logical exp

   64 negs: negs negs
   65     | NEG

   66 logical: AND
   67        | OR

   68 relation: relationterm relational relationterm

   69 relationterm: bool
   70             | exp

   71 relational: GT
   72           | LT
   73           | LE
   74           | GE
   75           | NE
   76           | EQ

   77 read: VAR ASSIGN SCAN
   78     | VAR COLON STRING ASSIGN SCAN
   79     | VAR COLON INT ASSIGN SCAN
   80     | VAR COLON REAL ASSIGN SCAN
   81     | VAR COLON CHAR ASSIGN SCAN

   82 $@3: /* empty */

   83 assignment: VAR ASSIGN $@3 value

   84 $@4: /* empty */

   85 $@5: /* empty */

   86 loop: WHILE $@4 logic REPEAT COLON $@5 body

   87 $@6: /* empty */

   88 $@7: /* empty */

   89 conditional: IF $@6 logic QUESTION $@7 body

   90 $@8: /* empty */

   91 $@9: /* empty */

   92 else: ELSE $@8 COLON $@9 body

   93 $@10: /* empty */

   94 else: ELSE $@10 conditional

   95 $@11: /* empty */

   96 write: PRINT $@11 content

   97 content: content content
   98        | exp
   99        | STR


Terminals, with rules where they appear

$end (0) 0
error (256)
INT_NUMBER (258) 21 42
REAL_NUMBER (259) 22 41
STR (260) 23 38 99
CHARACTER (261) 24 39
TRUE (262) 25 43
FALSE (263) 26 44
VAR (264) 2 16 17 18 19 20 21 22 23 24 25 26 28 45 51 62 77 78 79 80
    81 83
INT (265) 16 21 31 79
REAL (266) 17 22 32 80
STRING (267) 18 23 29 78
CHAR (268) 19 24 33 81
BOOLEAN (269) 20 25 26 30
BEGINPROGRAM (270) 2
ENDBLOCK (271) 3
NEWLINE (272) 4 5
FUNC (273)
REPEAT (274) 86
WHILE (275) 86
IF (276) 89
ELSE (277) 92 94
RETURN (278)
PRINT (279) 96
SCAN (280) 77 78 79 80 81
ASSIGN (281) 21 22 23 24 25 26 28 77 78 79 80 81 83
RETURNTYPE (282)
SUM (283) 55
SUBTRACTION (284) 56
MULTIPLICATION (285) 57
DIVISION (286) 58
EXPONENTIATION (287) 59
RESTDIV (288) 60
QUESTION (289) 89
GT (290) 71
LT (291) 72
LE (292) 73
GE (293) 74
NE (294) 75
EQ (295) 76
AND (296) 66
OR (297) 67
NEG (298) 65
COLON (299) 2 16 17 18 19 20 21 22 23 24 25 26 28 78 79 80 81 86 92
OPENPAR (300) 53
CLOSEPAR (301) 54
OPENBR (302)
CLOSEBR (303)
OPENCUR (304)
CLOSECUR (305)
SEPARATOR (306)
DECIMAL (307)


Nonterminals, with rules where they appear

$accept (53)
    on left: 0
program (54)
    on left: 2, on right: 0
$@1 (55)
    on left: 1, on right: 2
body (56)
    on left: 3 4 5, on right: 2 4 5 86 89 92
command (57)
    on left: 6 7 8 9 10 11 12 13, on right: 5
declaration (58)
    on left: 14 15, on right: 6
declarenoassign (59)
    on left: 16 17 18 19 20, on right: 14
declareassign (60)
    on left: 21 22 23 24 25 26 28, on right: 15
$@2 (61)
    on left: 27, on right: 28
datatype (62)
    on left: 29 30 31 32 33, on right: 28
value (63)
    on left: 34 35 36, on right: 28 83
literal (64)
    on left: 37 38 39 40, on right: 34
num (65)
    on left: 41 42, on right: 37 50
bool (66)
    on left: 43 44, on right: 40 69
exp (67)
    on left: 45 46 47 48, on right: 7 35 61 63 70 98
arithmetic (68)
    on left: 49 50 51 52, on right: 46 49 52
par (69)
    on left: 53 54, on right: 52 61
operation (70)
    on left: 55 56 57 58 59 60, on right: 49
logic (71)
    on left: 61 62 63, on right: 47 86 89
negs (72)
    on left: 64 65, on right: 62 64
logical (73)
    on left: 66 67, on right: 63
relation (74)
    on left: 68, on right: 48
relationterm (75)
    on left: 69 70, on right: 68
relational (76)
    on left: 71 72 73 74 75 76, on right: 68
read (77)
    on left: 77 78 79 80 81, on right: 12 36
assignment (78)
    on left: 83, on right: 8
$@3 (79)
    on left: 82, on right: 83
loop (80)
    on left: 86, on right: 9
$@4 (81)
    on left: 84, on right: 86
$@5 (82)
    on left: 85, on right: 86
conditional (83)
    on left: 89, on right: 10 94
$@6 (84)
    on left: 87, on right: 89
$@7 (85)
    on left: 88, on right: 89
else (86)
    on left: 92 94, on right: 11
$@8 (87)
    on left: 90, on right: 92
$@9 (88)
    on left: 91, on right: 92
$@10 (89)
    on left: 93, on right: 94
write (90)
    on left: 96, on right: 13
$@11 (91)
    on left: 95, on right: 96
content (92)
    on left: 97 98 99, on right: 96 97


State 0

    0 $accept: . program $end

    BEGINPROGRAM  shift, and go to state 1

    program  go to state 2


State 1

    2 program: BEGINPROGRAM . VAR COLON $@1 body

    VAR  shift, and go to state 3


State 2

    0 $accept: program . $end

    $end  shift, and go to state 4


State 3

    2 program: BEGINPROGRAM VAR . COLON $@1 body

    COLON  shift, and go to state 5


State 4

    0 $accept: program $end .

    $default  accept


State 5

    2 program: BEGINPROGRAM VAR COLON . $@1 body

    $default  reduce using rule 1 ($@1)

    $@1  go to state 6


State 6

    2 program: BEGINPROGRAM VAR COLON $@1 . body

    INT_NUMBER   shift, and go to state 7
    REAL_NUMBER  shift, and go to state 8
    TRUE         shift, and go to state 9
    FALSE        shift, and go to state 10
    VAR          shift, and go to state 11
    ENDBLOCK     shift, and go to state 12
    NEWLINE      shift, and go to state 13
    WHILE        shift, and go to state 14
    IF           shift, and go to state 15
    ELSE         shift, and go to state 16
    PRINT        shift, and go to state 17
    NEG          shift, and go to state 18
    OPENPAR      shift, and go to state 19
    CLOSEPAR     shift, and go to state 20

    body             go to state 21
    command          go to state 22
    declaration      go to state 23
    declarenoassign  go to state 24
    declareassign    go to state 25
    num              go to state 26
    bool             go to state 27
    exp              go to state 28
    arithmetic       go to state 29
    par              go to state 30
    logic            go to state 31
    negs             go to state 32
    relation         go to state 33
    relationterm     go to state 34
    read             go to state 35
    assignment       go to state 36
    loop             go to state 37
    conditional      go to state 38
    else             go to state 39
    write            go to state 40


State 7

   42 num: INT_NUMBER .

    $default  reduce using rule 42 (num)


State 8

   41 num: REAL_NUMBER .

    $default  reduce using rule 41 (num)


State 9

   43 bool: TRUE .

    $default  reduce using rule 43 (bool)


State 10

   44 bool: FALSE .

    $default  reduce using rule 44 (bool)


State 11

   16 declarenoassign: VAR . COLON INT
   17                | VAR . COLON REAL
   18                | VAR . COLON STRING
   19                | VAR . COLON CHAR
   20                | VAR . COLON BOOLEAN
   21 declareassign: VAR . COLON INT ASSIGN INT_NUMBER
   22              | VAR . COLON REAL ASSIGN REAL_NUMBER
   23              | VAR . COLON STRING ASSIGN STR
   24              | VAR . COLON CHAR ASSIGN CHARACTER
   25              | VAR . COLON BOOLEAN ASSIGN TRUE
   26              | VAR . COLON BOOLEAN ASSIGN FALSE
   28              | VAR . COLON datatype ASSIGN VAR $@2 VAR COLON datatype ASSIGN value
   45 exp: VAR .
   51 arithmetic: VAR .
   77 read: VAR . ASSIGN SCAN
   78     | VAR . COLON STRING ASSIGN SCAN
   79     | VAR . COLON INT ASSIGN SCAN
   80     | VAR . COLON REAL ASSIGN SCAN
   81     | VAR . COLON CHAR ASSIGN SCAN
   83 assignment: VAR . ASSIGN $@3 value

    ASSIGN  shift, and go to state 41
    COLON   shift, and go to state 42

    NEWLINE         reduce using rule 45 (exp)
    NEWLINE         [reduce using rule 51 (arithmetic)]
    SUM             reduce using rule 51 (arithmetic)
    SUBTRACTION     reduce using rule 51 (arithmetic)
    MULTIPLICATION  reduce using rule 51 (arithmetic)
    DIVISION        reduce using rule 51 (arithmetic)
    EXPONENTIATION  reduce using rule 51 (arithmetic)
    RESTDIV         reduce using rule 51 (arithmetic)
    GT              reduce using rule 45 (exp)
    GT              [reduce using rule 51 (arithmetic)]
    LT              reduce using rule 45 (exp)
    LT              [reduce using rule 51 (arithmetic)]
    LE              reduce using rule 45 (exp)
    LE              [reduce using rule 51 (arithmetic)]
    GE              reduce using rule 45 (exp)
    GE              [reduce using rule 51 (arithmetic)]
    NE              reduce using rule 45 (exp)
    NE              [reduce using rule 51 (arithmetic)]
    EQ              reduce using rule 45 (exp)
    EQ              [reduce using rule 51 (arithmetic)]
    AND             reduce using rule 45 (exp)
    AND             [reduce using rule 51 (arithmetic)]
    OR              reduce using rule 45 (exp)
    OR              [reduce using rule 51 (arithmetic)]
    $default        reduce using rule 45 (exp)


State 12

    3 body: ENDBLOCK .

    $default  reduce using rule 3 (body)


State 13

    4 body: NEWLINE . body

    INT_NUMBER   shift, and go to state 7
    REAL_NUMBER  shift, and go to state 8
    TRUE         shift, and go to state 9
    FALSE        shift, and go to state 10
    VAR          shift, and go to state 11
    ENDBLOCK     shift, and go to state 12
    NEWLINE      shift, and go to state 13
    WHILE        shift, and go to state 14
    IF           shift, and go to state 15
    ELSE         shift, and go to state 16
    PRINT        shift, and go to state 17
    NEG          shift, and go to state 18
    OPENPAR      shift, and go to state 19
    CLOSEPAR     shift, and go to state 20

    body             go to state 43
    command          go to state 22
    declaration      go to state 23
    declarenoassign  go to state 24
    declareassign    go to state 25
    num              go to state 26
    bool             go to state 27
    exp              go to state 28
    arithmetic       go to state 29
    par              go to state 30
    logic            go to state 31
    negs             go to state 32
    relation         go to state 33
    relationterm     go to state 34
    read             go to state 35
    assignment       go to state 36
    loop             go to state 37
    conditional      go to state 38
    else             go to state 39
    write            go to state 40


State 14

   86 loop: WHILE . $@4 logic REPEAT COLON $@5 body

    $default  reduce using rule 84 ($@4)

    $@4  go to state 44


State 15

   89 conditional: IF . $@6 logic QUESTION $@7 body

    $default  reduce using rule 87 ($@6)

    $@6  go to state 45


State 16

   92 else: ELSE . $@8 COLON $@9 body
   94     | ELSE . $@10 conditional

    IF        reduce using rule 93 ($@10)
    $default  reduce using rule 90 ($@8)

    $@8   go to state 46
    $@10  go to state 47


State 17

   96 write: PRINT . $@11 content

    $default  reduce using rule 95 ($@11)

    $@11  go to state 48


State 18

   65 negs: NEG .

    $default  reduce using rule 65 (negs)


State 19

   53 par: OPENPAR .

    $default  reduce using rule 53 (par)


State 20

   54 par: CLOSEPAR .

    $default  reduce using rule 54 (par)


State 21

    2 program: BEGINPROGRAM VAR COLON $@1 body .

    $default  reduce using rule 2 (program)


State 22

    5 body: command . NEWLINE body

    NEWLINE  shift, and go to state 49


State 23

    6 command: declaration .

    $default  reduce using rule 6 (command)


State 24

   14 declaration: declarenoassign .

    $default  reduce using rule 14 (declaration)


State 25

   15 declaration: declareassign .

    $default  reduce using rule 15 (declaration)


State 26

   50 arithmetic: num .

    $default  reduce using rule 50 (arithmetic)


State 27

   69 relationterm: bool .

    $default  reduce using rule 69 (relationterm)


State 28

    7 command: exp .
   63 logic: exp . logical exp
   70 relationterm: exp .

    AND  shift, and go to state 50
    OR   shift, and go to state 51

    NEWLINE   reduce using rule 7 (command)
    $default  reduce using rule 70 (relationterm)

    logical  go to state 52


State 29

   46 exp: arithmetic .
   49 arithmetic: arithmetic . operation arithmetic

    SUM             shift, and go to state 53
    SUBTRACTION     shift, and go to state 54
    MULTIPLICATION  shift, and go to state 55
    DIVISION        shift, and go to state 56
    EXPONENTIATION  shift, and go to state 57
    RESTDIV         shift, and go to state 58

    $default  reduce using rule 46 (exp)

    operation  go to state 59


State 30

   52 arithmetic: par . arithmetic par
   61 logic: par . exp par

    INT_NUMBER   shift, and go to state 7
    REAL_NUMBER  shift, and go to state 8
    TRUE         shift, and go to state 9
    FALSE        shift, and go to state 10
    VAR          shift, and go to state 60
    NEG          shift, and go to state 18
    OPENPAR      shift, and go to state 19
    CLOSEPAR     shift, and go to state 20

    num           go to state 26
    bool          go to state 27
    exp           go to state 61
    arithmetic    go to state 62
    par           go to state 30
    logic         go to state 31
    negs          go to state 32
    relation      go to state 33
    relationterm  go to state 34


State 31

   47 exp: logic .

    $default  reduce using rule 47 (exp)


State 32

   62 logic: negs . VAR
   64 negs: negs . negs

    VAR  shift, and go to state 63
    NEG  shift, and go to state 18

    negs  go to state 64


State 33

   48 exp: relation .

    $default  reduce using rule 48 (exp)


State 34

   68 relation: relationterm . relational relationterm

    GT  shift, and go to state 65
    LT  shift, and go to state 66
    LE  shift, and go to state 67
    GE  shift, and go to state 68
    NE  shift, and go to state 69
    EQ  shift, and go to state 70

    relational  go to state 71


State 35

   12 command: read .

    $default  reduce using rule 12 (command)


State 36

    8 command: assignment .

    $default  reduce using rule 8 (command)


State 37

    9 command: loop .

    $default  reduce using rule 9 (command)


State 38

   10 command: conditional .

    $default  reduce using rule 10 (command)


State 39

   11 command: else .

    $default  reduce using rule 11 (command)


State 40

   13 command: write .

    $default  reduce using rule 13 (command)


State 41

   77 read: VAR ASSIGN . SCAN
   83 assignment: VAR ASSIGN . $@3 value

    SCAN  shift, and go to state 72

    $default  reduce using rule 82 ($@3)

    $@3  go to state 73


State 42

   16 declarenoassign: VAR COLON . INT
   17                | VAR COLON . REAL
   18                | VAR COLON . STRING
   19                | VAR COLON . CHAR
   20                | VAR COLON . BOOLEAN
   21 declareassign: VAR COLON . INT ASSIGN INT_NUMBER
   22              | VAR COLON . REAL ASSIGN REAL_NUMBER
   23              | VAR COLON . STRING ASSIGN STR
   24              | VAR COLON . CHAR ASSIGN CHARACTER
   25              | VAR COLON . BOOLEAN ASSIGN TRUE
   26              | VAR COLON . BOOLEAN ASSIGN FALSE
   28              | VAR COLON . datatype ASSIGN VAR $@2 VAR COLON datatype ASSIGN value
   78 read: VAR COLON . STRING ASSIGN SCAN
   79     | VAR COLON . INT ASSIGN SCAN
   80     | VAR COLON . REAL ASSIGN SCAN
   81     | VAR COLON . CHAR ASSIGN SCAN

    INT      shift, and go to state 74
    REAL     shift, and go to state 75
    STRING   shift, and go to state 76
    CHAR     shift, and go to state 77
    BOOLEAN  shift, and go to state 78

    datatype  go to state 79


State 43

    4 body: NEWLINE body .

    $default  reduce using rule 4 (body)


State 44

   86 loop: WHILE $@4 . logic REPEAT COLON $@5 body

    INT_NUMBER   shift, and go to state 7
    REAL_NUMBER  shift, and go to state 8
    TRUE         shift, and go to state 9
    FALSE        shift, and go to state 10
    VAR          shift, and go to state 60
    NEG          shift, and go to state 18
    OPENPAR      shift, and go to state 19
    CLOSEPAR     shift, and go to state 20

    num           go to state 26
    bool          go to state 27
    exp           go to state 80
    arithmetic    go to state 29
    par           go to state 30
    logic         go to state 81
    negs          go to state 32
    relation      go to state 33
    relationterm  go to state 34


State 45

   89 conditional: IF $@6 . logic QUESTION $@7 body

    INT_NUMBER   shift, and go to state 7
    REAL_NUMBER  shift, and go to state 8
    TRUE         shift, and go to state 9
    FALSE        shift, and go to state 10
    VAR          shift, and go to state 60
    NEG          shift, and go to state 18
    OPENPAR      shift, and go to state 19
    CLOSEPAR     shift, and go to state 20

    num           go to state 26
    bool          go to state 27
    exp           go to state 80
    arithmetic    go to state 29
    par           go to state 30
    logic         go to state 82
    negs          go to state 32
    relation      go to state 33
    relationterm  go to state 34


State 46

   92 else: ELSE $@8 . COLON $@9 body

    COLON  shift, and go to state 83


State 47

   94 else: ELSE $@10 . conditional

    IF  shift, and go to state 15

    conditional  go to state 84


State 48

   96 write: PRINT $@11 . content

    INT_NUMBER   shift, and go to state 7
    REAL_NUMBER  shift, and go to state 8
    STR          shift, and go to state 85
    TRUE         shift, and go to state 9
    FALSE        shift, and go to state 10
    VAR          shift, and go to state 60
    NEG          shift, and go to state 18
    OPENPAR      shift, and go to state 19
    CLOSEPAR     shift, and go to state 20

    num           go to state 26
    bool          go to state 27
    exp           go to state 86
    arithmetic    go to state 29
    par           go to state 30
    logic         go to state 31
    negs          go to state 32
    relation      go to state 33
    relationterm  go to state 34
    content       go to state 87


State 49

    5 body: command NEWLINE . body

    INT_NUMBER   shift, and go to state 7
    REAL_NUMBER  shift, and go to state 8
    TRUE         shift, and go to state 9
    FALSE        shift, and go to state 10
    VAR          shift, and go to state 11
    ENDBLOCK     shift, and go to state 12
    NEWLINE      shift, and go to state 13
    WHILE        shift, and go to state 14
    IF           shift, and go to state 15
    ELSE         shift, and go to state 16
    PRINT        shift, and go to state 17
    NEG          shift, and go to state 18
    OPENPAR      shift, and go to state 19
    CLOSEPAR     shift, and go to state 20

    body             go to state 88
    command          go to state 22
    declaration      go to state 23
    declarenoassign  go to state 24
    declareassign    go to state 25
    num              go to state 26
    bool             go to state 27
    exp              go to state 28
    arithmetic       go to state 29
    par              go to state 30
    logic            go to state 31
    negs             go to state 32
    relation         go to state 33
    relationterm     go to state 34
    read             go to state 35
    assignment       go to state 36
    loop             go to state 37
    conditional      go to state 38
    else             go to state 39
    write            go to state 40


State 50

   66 logical: AND .

    $default  reduce using rule 66 (logical)


State 51

   67 logical: OR .

    $default  reduce using rule 67 (logical)


State 52

   63 logic: exp logical . exp

    INT_NUMBER   shift, and go to state 7
    REAL_NUMBER  shift, and go to state 8
    TRUE         shift, and go to state 9
    FALSE        shift, and go to state 10
    VAR          shift, and go to state 60
    NEG          shift, and go to state 18
    OPENPAR      shift, and go to state 19
    CLOSEPAR     shift, and go to state 20

    num           go to state 26
    bool          go to state 27
    exp           go to state 89
    arithmetic    go to state 29
    par           go to state 30
    logic         go to state 31
    negs          go to state 32
    relation      go to state 33
    relationterm  go to state 34


State 53

   55 operation: SUM .

    $default  reduce using rule 55 (operation)


State 54

   56 operation: SUBTRACTION .

    $default  reduce using rule 56 (operation)


State 55

   57 operation: MULTIPLICATION .

    $default  reduce using rule 57 (operation)


State 56

   58 operation: DIVISION .

    $default  reduce using rule 58 (operation)


State 57

   59 operation: EXPONENTIATION .

    $default  reduce using rule 59 (operation)


State 58

   60 operation: RESTDIV .

    $default  reduce using rule 60 (operation)


State 59

   49 arithmetic: arithmetic operation . arithmetic

    INT_NUMBER   shift, and go to state 7
    REAL_NUMBER  shift, and go to state 8
    VAR          shift, and go to state 90
    OPENPAR      shift, and go to state 19
    CLOSEPAR     shift, and go to state 20

    num         go to state 26
    arithmetic  go to state 91
    par         go to state 92


State 60

   45 exp: VAR .
   51 arithmetic: VAR .

    INT_NUMBER      reduce using rule 45 (exp)
    INT_NUMBER      [reduce using rule 51 (arithmetic)]
    REAL_NUMBER     reduce using rule 45 (exp)
    REAL_NUMBER     [reduce using rule 51 (arithmetic)]
    STR             reduce using rule 45 (exp)
    STR             [reduce using rule 51 (arithmetic)]
    TRUE            reduce using rule 45 (exp)
    TRUE            [reduce using rule 51 (arithmetic)]
    FALSE           reduce using rule 45 (exp)
    FALSE           [reduce using rule 51 (arithmetic)]
    VAR             reduce using rule 45 (exp)
    VAR             [reduce using rule 51 (arithmetic)]
    NEWLINE         reduce using rule 45 (exp)
    NEWLINE         [reduce using rule 51 (arithmetic)]
    REPEAT          reduce using rule 45 (exp)
    REPEAT          [reduce using rule 51 (arithmetic)]
    SUM             reduce using rule 51 (arithmetic)
    SUBTRACTION     reduce using rule 51 (arithmetic)
    MULTIPLICATION  reduce using rule 51 (arithmetic)
    DIVISION        reduce using rule 51 (arithmetic)
    EXPONENTIATION  reduce using rule 51 (arithmetic)
    RESTDIV         reduce using rule 51 (arithmetic)
    QUESTION        reduce using rule 45 (exp)
    QUESTION        [reduce using rule 51 (arithmetic)]
    GT              reduce using rule 45 (exp)
    GT              [reduce using rule 51 (arithmetic)]
    LT              reduce using rule 45 (exp)
    LT              [reduce using rule 51 (arithmetic)]
    LE              reduce using rule 45 (exp)
    LE              [reduce using rule 51 (arithmetic)]
    GE              reduce using rule 45 (exp)
    GE              [reduce using rule 51 (arithmetic)]
    NE              reduce using rule 45 (exp)
    NE              [reduce using rule 51 (arithmetic)]
    EQ              reduce using rule 45 (exp)
    EQ              [reduce using rule 51 (arithmetic)]
    AND             reduce using rule 45 (exp)
    AND             [reduce using rule 51 (arithmetic)]
    OR              reduce using rule 45 (exp)
    OR              [reduce using rule 51 (arithmetic)]
    NEG             reduce using rule 45 (exp)
    NEG             [reduce using rule 51 (arithmetic)]
    OPENPAR         reduce using rule 45 (exp)
    OPENPAR         [reduce using rule 51 (arithmetic)]
    CLOSEPAR        reduce using rule 45 (exp)
    CLOSEPAR        [reduce using rule 51 (arithmetic)]
    $default        reduce using rule 45 (exp)


State 61

   61 logic: par exp . par
   63      | exp . logical exp
   70 relationterm: exp .

    AND       shift, and go to state 50
    OR        shift, and go to state 51
    OPENPAR   shift, and go to state 19
    CLOSEPAR  shift, and go to state 20

    $default  reduce using rule 70 (relationterm)

    par      go to state 93
    logical  go to state 52


State 62

   46 exp: arithmetic .
   49 arithmetic: arithmetic . operation arithmetic
   52           | par arithmetic . par

    SUM             shift, and go to state 53
    SUBTRACTION     shift, and go to state 54
    MULTIPLICATION  shift, and go to state 55
    DIVISION        shift, and go to state 56
    EXPONENTIATION  shift, and go to state 57
    RESTDIV         shift, and go to state 58
    OPENPAR         shift, and go to state 19
    CLOSEPAR        shift, and go to state 20

    OPENPAR   [reduce using rule 46 (exp)]
    CLOSEPAR  [reduce using rule 46 (exp)]
    $default  reduce using rule 46 (exp)

    par        go to state 94
    operation  go to state 59


State 63

   62 logic: negs VAR .

    $default  reduce using rule 62 (logic)


State 64

   64 negs: negs . negs
   64     | negs negs .

    NEG  shift, and go to state 18

    NEG       [reduce using rule 64 (negs)]
    $default  reduce using rule 64 (negs)

    negs  go to state 64


State 65

   71 relational: GT .

    $default  reduce using rule 71 (relational)


State 66

   72 relational: LT .

    $default  reduce using rule 72 (relational)


State 67

   73 relational: LE .

    $default  reduce using rule 73 (relational)


State 68

   74 relational: GE .

    $default  reduce using rule 74 (relational)


State 69

   75 relational: NE .

    $default  reduce using rule 75 (relational)


State 70

   76 relational: EQ .

    $default  reduce using rule 76 (relational)


State 71

   68 relation: relationterm relational . relationterm

    INT_NUMBER   shift, and go to state 7
    REAL_NUMBER  shift, and go to state 8
    TRUE         shift, and go to state 9
    FALSE        shift, and go to state 10
    VAR          shift, and go to state 60
    NEG          shift, and go to state 18
    OPENPAR      shift, and go to state 19
    CLOSEPAR     shift, and go to state 20

    num           go to state 26
    bool          go to state 27
    exp           go to state 80
    arithmetic    go to state 29
    par           go to state 30
    logic         go to state 31
    negs          go to state 32
    relation      go to state 33
    relationterm  go to state 95


State 72

   77 read: VAR ASSIGN SCAN .

    $default  reduce using rule 77 (read)


State 73

   83 assignment: VAR ASSIGN $@3 . value

    INT_NUMBER   shift, and go to state 7
    REAL_NUMBER  shift, and go to state 8
    STR          shift, and go to state 96
    CHARACTER    shift, and go to state 97
    TRUE         shift, and go to state 9
    FALSE        shift, and go to state 10
    VAR          shift, and go to state 98
    NEG          shift, and go to state 18
    OPENPAR      shift, and go to state 19
    CLOSEPAR     shift, and go to state 20

    value         go to state 99
    literal       go to state 100
    num           go to state 101
    bool          go to state 102
    exp           go to state 103
    arithmetic    go to state 29
    par           go to state 30
    logic         go to state 31
    negs          go to state 32
    relation      go to state 33
    relationterm  go to state 34
    read          go to state 104


State 74

   16 declarenoassign: VAR COLON INT .
   21 declareassign: VAR COLON INT . ASSIGN INT_NUMBER
   31 datatype: INT .
   79 read: VAR COLON INT . ASSIGN SCAN

    ASSIGN  shift, and go to state 105

    ASSIGN    [reduce using rule 31 (datatype)]
    $default  reduce using rule 16 (declarenoassign)


State 75

   17 declarenoassign: VAR COLON REAL .
   22 declareassign: VAR COLON REAL . ASSIGN REAL_NUMBER
   32 datatype: REAL .
   80 read: VAR COLON REAL . ASSIGN SCAN

    ASSIGN  shift, and go to state 106

    ASSIGN    [reduce using rule 32 (datatype)]
    $default  reduce using rule 17 (declarenoassign)


State 76

   18 declarenoassign: VAR COLON STRING .
   23 declareassign: VAR COLON STRING . ASSIGN STR
   29 datatype: STRING .
   78 read: VAR COLON STRING . ASSIGN SCAN

    ASSIGN  shift, and go to state 107

    ASSIGN    [reduce using rule 29 (datatype)]
    $default  reduce using rule 18 (declarenoassign)


State 77

   19 declarenoassign: VAR COLON CHAR .
   24 declareassign: VAR COLON CHAR . ASSIGN CHARACTER
   33 datatype: CHAR .
   81 read: VAR COLON CHAR . ASSIGN SCAN

    ASSIGN  shift, and go to state 108

    ASSIGN    [reduce using rule 33 (datatype)]
    $default  reduce using rule 19 (declarenoassign)


State 78

   20 declarenoassign: VAR COLON BOOLEAN .
   25 declareassign: VAR COLON BOOLEAN . ASSIGN TRUE
   26              | VAR COLON BOOLEAN . ASSIGN FALSE
   30 datatype: BOOLEAN .

    ASSIGN  shift, and go to state 109

    ASSIGN    [reduce using rule 30 (datatype)]
    $default  reduce using rule 20 (declarenoassign)


State 79

   28 declareassign: VAR COLON datatype . ASSIGN VAR $@2 VAR COLON datatype ASSIGN value

    ASSIGN  shift, and go to state 110


State 80

   63 logic: exp . logical exp
   70 relationterm: exp .

    AND  shift, and go to state 50
    OR   shift, and go to state 51

    AND       [reduce using rule 70 (relationterm)]
    OR        [reduce using rule 70 (relationterm)]
    $default  reduce using rule 70 (relationterm)

    logical  go to state 52


State 81

   47 exp: logic .
   86 loop: WHILE $@4 logic . REPEAT COLON $@5 body

    REPEAT  shift, and go to state 111

    $default  reduce using rule 47 (exp)


State 82

   47 exp: logic .
   89 conditional: IF $@6 logic . QUESTION $@7 body

    QUESTION  shift, and go to state 112

    $default  reduce using rule 47 (exp)


State 83

   92 else: ELSE $@8 COLON . $@9 body

    $default  reduce using rule 91 ($@9)

    $@9  go to state 113


State 84

   94 else: ELSE $@10 conditional .

    $default  reduce using rule 94 (else)


State 85

   99 content: STR .

    $default  reduce using rule 99 (content)


State 86

   63 logic: exp . logical exp
   70 relationterm: exp .
   98 content: exp .

    AND  shift, and go to state 50
    OR   shift, and go to state 51

    GT        reduce using rule 70 (relationterm)
    LT        reduce using rule 70 (relationterm)
    LE        reduce using rule 70 (relationterm)
    GE        reduce using rule 70 (relationterm)
    NE        reduce using rule 70 (relationterm)
    EQ        reduce using rule 70 (relationterm)
    $default  reduce using rule 98 (content)

    logical  go to state 52


State 87

   96 write: PRINT $@11 content .
   97 content: content . content

    INT_NUMBER   shift, and go to state 7
    REAL_NUMBER  shift, and go to state 8
    STR          shift, and go to state 85
    TRUE         shift, and go to state 9
    FALSE        shift, and go to state 10
    VAR          shift, and go to state 60
    NEG          shift, and go to state 18
    OPENPAR      shift, and go to state 19
    CLOSEPAR     shift, and go to state 20

    $default  reduce using rule 96 (write)

    num           go to state 26
    bool          go to state 27
    exp           go to state 86
    arithmetic    go to state 29
    par           go to state 30
    logic         go to state 31
    negs          go to state 32
    relation      go to state 33
    relationterm  go to state 34
    content       go to state 114


State 88

    5 body: command NEWLINE body .

    $default  reduce using rule 5 (body)


State 89

   63 logic: exp . logical exp
   63      | exp logical exp .
   70 relationterm: exp .

    AND  shift, and go to state 50
    OR   shift, and go to state 51

    GT        reduce using rule 63 (logic)
    GT        [reduce using rule 70 (relationterm)]
    LT        reduce using rule 63 (logic)
    LT        [reduce using rule 70 (relationterm)]
    LE        reduce using rule 63 (logic)
    LE        [reduce using rule 70 (relationterm)]
    GE        reduce using rule 63 (logic)
    GE        [reduce using rule 70 (relationterm)]
    NE        reduce using rule 63 (logic)
    NE        [reduce using rule 70 (relationterm)]
    EQ        reduce using rule 63 (logic)
    EQ        [reduce using rule 70 (relationterm)]
    AND       [reduce using rule 63 (logic)]
    OR        [reduce using rule 63 (logic)]
    $default  reduce using rule 63 (logic)

    logical  go to state 52


State 90

   51 arithmetic: VAR .

    $default  reduce using rule 51 (arithmetic)


State 91

   49 arithmetic: arithmetic . operation arithmetic
   49           | arithmetic operation arithmetic .

    SUM             shift, and go to state 53
    SUBTRACTION     shift, and go to state 54
    MULTIPLICATION  shift, and go to state 55
    DIVISION        shift, and go to state 56
    EXPONENTIATION  shift, and go to state 57
    RESTDIV         shift, and go to state 58

    SUM             [reduce using rule 49 (arithmetic)]
    SUBTRACTION     [reduce using rule 49 (arithmetic)]
    MULTIPLICATION  [reduce using rule 49 (arithmetic)]
    DIVISION        [reduce using rule 49 (arithmetic)]
    EXPONENTIATION  [reduce using rule 49 (arithmetic)]
    RESTDIV         [reduce using rule 49 (arithmetic)]
    $default        reduce using rule 49 (arithmetic)

    operation  go to state 59


State 92

   52 arithmetic: par . arithmetic par

    INT_NUMBER   shift, and go to state 7
    REAL_NUMBER  shift, and go to state 8
    VAR          shift, and go to state 90
    OPENPAR      shift, and go to state 19
    CLOSEPAR     shift, and go to state 20

    num         go to state 26
    arithmetic  go to state 115
    par         go to state 92


State 93

   61 logic: par exp par .

    $default  reduce using rule 61 (logic)


State 94

   52 arithmetic: par arithmetic par .

    $default  reduce using rule 52 (arithmetic)


State 95

   68 relation: relationterm . relational relationterm
   68         | relationterm relational relationterm .

    GT  shift, and go to state 65
    LT  shift, and go to state 66
    LE  shift, and go to state 67
    GE  shift, and go to state 68
    NE  shift, and go to state 69
    EQ  shift, and go to state 70

    GT        [reduce using rule 68 (relation)]
    LT        [reduce using rule 68 (relation)]
    LE        [reduce using rule 68 (relation)]
    GE        [reduce using rule 68 (relation)]
    NE        [reduce using rule 68 (relation)]
    EQ        [reduce using rule 68 (relation)]
    $default  reduce using rule 68 (relation)

    relational  go to state 71


State 96

   38 literal: STR .

    $default  reduce using rule 38 (literal)


State 97

   39 literal: CHARACTER .

    $default  reduce using rule 39 (literal)


State 98

   45 exp: VAR .
   51 arithmetic: VAR .
   77 read: VAR . ASSIGN SCAN
   78     | VAR . COLON STRING ASSIGN SCAN
   79     | VAR . COLON INT ASSIGN SCAN
   80     | VAR . COLON REAL ASSIGN SCAN
   81     | VAR . COLON CHAR ASSIGN SCAN

    ASSIGN  shift, and go to state 116
    COLON   shift, and go to state 117

    NEWLINE         reduce using rule 45 (exp)
    NEWLINE         [reduce using rule 51 (arithmetic)]
    SUM             reduce using rule 51 (arithmetic)
    SUBTRACTION     reduce using rule 51 (arithmetic)
    MULTIPLICATION  reduce using rule 51 (arithmetic)
    DIVISION        reduce using rule 51 (arithmetic)
    EXPONENTIATION  reduce using rule 51 (arithmetic)
    RESTDIV         reduce using rule 51 (arithmetic)
    GT              reduce using rule 45 (exp)
    GT              [reduce using rule 51 (arithmetic)]
    LT              reduce using rule 45 (exp)
    LT              [reduce using rule 51 (arithmetic)]
    LE              reduce using rule 45 (exp)
    LE              [reduce using rule 51 (arithmetic)]
    GE              reduce using rule 45 (exp)
    GE              [reduce using rule 51 (arithmetic)]
    NE              reduce using rule 45 (exp)
    NE              [reduce using rule 51 (arithmetic)]
    EQ              reduce using rule 45 (exp)
    EQ              [reduce using rule 51 (arithmetic)]
    AND             reduce using rule 45 (exp)
    AND             [reduce using rule 51 (arithmetic)]
    OR              reduce using rule 45 (exp)
    OR              [reduce using rule 51 (arithmetic)]
    $default        reduce using rule 45 (exp)


State 99

   83 assignment: VAR ASSIGN $@3 value .

    $default  reduce using rule 83 (assignment)


State 100

   34 value: literal .

    $default  reduce using rule 34 (value)


State 101

   37 literal: num .
   50 arithmetic: num .

    NEWLINE   reduce using rule 37 (literal)
    NEWLINE   [reduce using rule 50 (arithmetic)]
    $default  reduce using rule 50 (arithmetic)


State 102

   40 literal: bool .
   69 relationterm: bool .

    NEWLINE   reduce using rule 40 (literal)
    $default  reduce using rule 69 (relationterm)


State 103

   35 value: exp .
   63 logic: exp . logical exp
   70 relationterm: exp .

    AND  shift, and go to state 50
    OR   shift, and go to state 51

    NEWLINE   reduce using rule 35 (value)
    $default  reduce using rule 70 (relationterm)

    logical  go to state 52


State 104

   36 value: read .

    $default  reduce using rule 36 (value)


State 105

   21 declareassign: VAR COLON INT ASSIGN . INT_NUMBER
   79 read: VAR COLON INT ASSIGN . SCAN

    INT_NUMBER  shift, and go to state 118
    SCAN        shift, and go to state 119


State 106

   22 declareassign: VAR COLON REAL ASSIGN . REAL_NUMBER
   80 read: VAR COLON REAL ASSIGN . SCAN

    REAL_NUMBER  shift, and go to state 120
    SCAN         shift, and go to state 121


State 107

   23 declareassign: VAR COLON STRING ASSIGN . STR
   78 read: VAR COLON STRING ASSIGN . SCAN

    STR   shift, and go to state 122
    SCAN  shift, and go to state 123


State 108

   24 declareassign: VAR COLON CHAR ASSIGN . CHARACTER
   81 read: VAR COLON CHAR ASSIGN . SCAN

    CHARACTER  shift, and go to state 124
    SCAN       shift, and go to state 125


State 109

   25 declareassign: VAR COLON BOOLEAN ASSIGN . TRUE
   26              | VAR COLON BOOLEAN ASSIGN . FALSE

    TRUE   shift, and go to state 126
    FALSE  shift, and go to state 127


State 110

   28 declareassign: VAR COLON datatype ASSIGN . VAR $@2 VAR COLON datatype ASSIGN value

    VAR  shift, and go to state 128


State 111

   86 loop: WHILE $@4 logic REPEAT . COLON $@5 body

    COLON  shift, and go to state 129


State 112

   89 conditional: IF $@6 logic QUESTION . $@7 body

    $default  reduce using rule 88 ($@7)

    $@7  go to state 130


State 113

   92 else: ELSE $@8 COLON $@9 . body

    INT_NUMBER   shift, and go to state 7
    REAL_NUMBER  shift, and go to state 8
    TRUE         shift, and go to state 9
    FALSE        shift, and go to state 10
    VAR          shift, and go to state 11
    ENDBLOCK     shift, and go to state 12
    NEWLINE      shift, and go to state 13
    WHILE        shift, and go to state 14
    IF           shift, and go to state 15
    ELSE         shift, and go to state 16
    PRINT        shift, and go to state 17
    NEG          shift, and go to state 18
    OPENPAR      shift, and go to state 19
    CLOSEPAR     shift, and go to state 20

    body             go to state 131
    command          go to state 22
    declaration      go to state 23
    declarenoassign  go to state 24
    declareassign    go to state 25
    num              go to state 26
    bool             go to state 27
    exp              go to state 28
    arithmetic       go to state 29
    par              go to state 30
    logic            go to state 31
    negs             go to state 32
    relation         go to state 33
    relationterm     go to state 34
    read             go to state 35
    assignment       go to state 36
    loop             go to state 37
    conditional      go to state 38
    else             go to state 39
    write            go to state 40


State 114

   97 content: content . content
   97        | content content .

    INT_NUMBER   shift, and go to state 7
    REAL_NUMBER  shift, and go to state 8
    STR          shift, and go to state 85
    TRUE         shift, and go to state 9
    FALSE        shift, and go to state 10
    VAR          shift, and go to state 60
    NEG          shift, and go to state 18
    OPENPAR      shift, and go to state 19
    CLOSEPAR     shift, and go to state 20

    INT_NUMBER   [reduce using rule 97 (content)]
    REAL_NUMBER  [reduce using rule 97 (content)]
    STR          [reduce using rule 97 (content)]
    TRUE         [reduce using rule 97 (content)]
    FALSE        [reduce using rule 97 (content)]
    VAR          [reduce using rule 97 (content)]
    NEG          [reduce using rule 97 (content)]
    OPENPAR      [reduce using rule 97 (content)]
    CLOSEPAR     [reduce using rule 97 (content)]
    $default     reduce using rule 97 (content)

    num           go to state 26
    bool          go to state 27
    exp           go to state 86
    arithmetic    go to state 29
    par           go to state 30
    logic         go to state 31
    negs          go to state 32
    relation      go to state 33
    relationterm  go to state 34
    content       go to state 114


State 115

   49 arithmetic: arithmetic . operation arithmetic
   52           | par arithmetic . par

    SUM             shift, and go to state 53
    SUBTRACTION     shift, and go to state 54
    MULTIPLICATION  shift, and go to state 55
    DIVISION        shift, and go to state 56
    EXPONENTIATION  shift, and go to state 57
    RESTDIV         shift, and go to state 58
    OPENPAR         shift, and go to state 19
    CLOSEPAR        shift, and go to state 20

    par        go to state 94
    operation  go to state 59


State 116

   77 read: VAR ASSIGN . SCAN

    SCAN  shift, and go to state 72


State 117

   78 read: VAR COLON . STRING ASSIGN SCAN
   79     | VAR COLON . INT ASSIGN SCAN
   80     | VAR COLON . REAL ASSIGN SCAN
   81     | VAR COLON . CHAR ASSIGN SCAN

    INT     shift, and go to state 132
    REAL    shift, and go to state 133
    STRING  shift, and go to state 134
    CHAR    shift, and go to state 135


State 118

   21 declareassign: VAR COLON INT ASSIGN INT_NUMBER .

    $default  reduce using rule 21 (declareassign)


State 119

   79 read: VAR COLON INT ASSIGN SCAN .

    $default  reduce using rule 79 (read)


State 120

   22 declareassign: VAR COLON REAL ASSIGN REAL_NUMBER .

    $default  reduce using rule 22 (declareassign)


State 121

   80 read: VAR COLON REAL ASSIGN SCAN .

    $default  reduce using rule 80 (read)


State 122

   23 declareassign: VAR COLON STRING ASSIGN STR .

    $default  reduce using rule 23 (declareassign)


State 123

   78 read: VAR COLON STRING ASSIGN SCAN .

    $default  reduce using rule 78 (read)


State 124

   24 declareassign: VAR COLON CHAR ASSIGN CHARACTER .

    $default  reduce using rule 24 (declareassign)


State 125

   81 read: VAR COLON CHAR ASSIGN SCAN .

    $default  reduce using rule 81 (read)


State 126

   25 declareassign: VAR COLON BOOLEAN ASSIGN TRUE .

    $default  reduce using rule 25 (declareassign)


State 127

   26 declareassign: VAR COLON BOOLEAN ASSIGN FALSE .

    $default  reduce using rule 26 (declareassign)


State 128

   28 declareassign: VAR COLON datatype ASSIGN VAR . $@2 VAR COLON datatype ASSIGN value

    $default  reduce using rule 27 ($@2)

    $@2  go to state 136


State 129

   86 loop: WHILE $@4 logic REPEAT COLON . $@5 body

    $default  reduce using rule 85 ($@5)

    $@5  go to state 137


State 130

   89 conditional: IF $@6 logic QUESTION $@7 . body

    INT_NUMBER   shift, and go to state 7
    REAL_NUMBER  shift, and go to state 8
    TRUE         shift, and go to state 9
    FALSE        shift, and go to state 10
    VAR          shift, and go to state 11
    ENDBLOCK     shift, and go to state 12
    NEWLINE      shift, and go to state 13
    WHILE        shift, and go to state 14
    IF           shift, and go to state 15
    ELSE         shift, and go to state 16
    PRINT        shift, and go to state 17
    NEG          shift, and go to state 18
    OPENPAR      shift, and go to state 19
    CLOSEPAR     shift, and go to state 20

    body             go to state 138
    command          go to state 22
    declaration      go to state 23
    declarenoassign  go to state 24
    declareassign    go to state 25
    num              go to state 26
    bool             go to state 27
    exp              go to state 28
    arithmetic       go to state 29
    par              go to state 30
    logic            go to state 31
    negs             go to state 32
    relation         go to state 33
    relationterm     go to state 34
    read             go to state 35
    assignment       go to state 36
    loop             go to state 37
    conditional      go to state 38
    else             go to state 39
    write            go to state 40


State 131

   92 else: ELSE $@8 COLON $@9 body .

    $default  reduce using rule 92 (else)


State 132

   79 read: VAR COLON INT . ASSIGN SCAN

    ASSIGN  shift, and go to state 139


State 133

   80 read: VAR COLON REAL . ASSIGN SCAN

    ASSIGN  shift, and go to state 140


State 134

   78 read: VAR COLON STRING . ASSIGN SCAN

    ASSIGN  shift, and go to state 141


State 135

   81 read: VAR COLON CHAR . ASSIGN SCAN

    ASSIGN  shift, and go to state 142


State 136

   28 declareassign: VAR COLON datatype ASSIGN VAR $@2 . VAR COLON datatype ASSIGN value

    VAR  shift, and go to state 143


State 137

   86 loop: WHILE $@4 logic REPEAT COLON $@5 . body

    INT_NUMBER   shift, and go to state 7
    REAL_NUMBER  shift, and go to state 8
    TRUE         shift, and go to state 9
    FALSE        shift, and go to state 10
    VAR          shift, and go to state 11
    ENDBLOCK     shift, and go to state 12
    NEWLINE      shift, and go to state 13
    WHILE        shift, and go to state 14
    IF           shift, and go to state 15
    ELSE         shift, and go to state 16
    PRINT        shift, and go to state 17
    NEG          shift, and go to state 18
    OPENPAR      shift, and go to state 19
    CLOSEPAR     shift, and go to state 20

    body             go to state 144
    command          go to state 22
    declaration      go to state 23
    declarenoassign  go to state 24
    declareassign    go to state 25
    num              go to state 26
    bool             go to state 27
    exp              go to state 28
    arithmetic       go to state 29
    par              go to state 30
    logic            go to state 31
    negs             go to state 32
    relation         go to state 33
    relationterm     go to state 34
    read             go to state 35
    assignment       go to state 36
    loop             go to state 37
    conditional      go to state 38
    else             go to state 39
    write            go to state 40


State 138

   89 conditional: IF $@6 logic QUESTION $@7 body .

    $default  reduce using rule 89 (conditional)


State 139

   79 read: VAR COLON INT ASSIGN . SCAN

    SCAN  shift, and go to state 119


State 140

   80 read: VAR COLON REAL ASSIGN . SCAN

    SCAN  shift, and go to state 121


State 141

   78 read: VAR COLON STRING ASSIGN . SCAN

    SCAN  shift, and go to state 123


State 142

   81 read: VAR COLON CHAR ASSIGN . SCAN

    SCAN  shift, and go to state 125


State 143

   28 declareassign: VAR COLON datatype ASSIGN VAR $@2 VAR . COLON datatype ASSIGN value

    COLON  shift, and go to state 145


State 144

   86 loop: WHILE $@4 logic REPEAT COLON $@5 body .

    $default  reduce using rule 86 (loop)


State 145

   28 declareassign: VAR COLON datatype ASSIGN VAR $@2 VAR COLON . datatype ASSIGN value

    INT      shift, and go to state 146
    REAL     shift, and go to state 147
    STRING   shift, and go to state 148
    CHAR     shift, and go to state 149
    BOOLEAN  shift, and go to state 150

    datatype  go to state 151


State 146

   31 datatype: INT .

    $default  reduce using rule 31 (datatype)


State 147

   32 datatype: REAL .

    $default  reduce using rule 32 (datatype)


State 148

   29 datatype: STRING .

    $default  reduce using rule 29 (datatype)


State 149

   33 datatype: CHAR .

    $default  reduce using rule 33 (datatype)


State 150

   30 datatype: BOOLEAN .

    $default  reduce using rule 30 (datatype)


State 151

   28 declareassign: VAR COLON datatype ASSIGN VAR $@2 VAR COLON datatype . ASSIGN value

    ASSIGN  shift, and go to state 152


State 152

   28 declareassign: VAR COLON datatype ASSIGN VAR $@2 VAR COLON datatype ASSIGN . value

    INT_NUMBER   shift, and go to state 7
    REAL_NUMBER  shift, and go to state 8
    STR          shift, and go to state 96
    CHARACTER    shift, and go to state 97
    TRUE         shift, and go to state 9
    FALSE        shift, and go to state 10
    VAR          shift, and go to state 98
    NEG          shift, and go to state 18
    OPENPAR      shift, and go to state 19
    CLOSEPAR     shift, and go to state 20

    value         go to state 153
    literal       go to state 100
    num           go to state 101
    bool          go to state 102
    exp           go to state 103
    arithmetic    go to state 29
    par           go to state 30
    logic         go to state 31
    negs          go to state 32
    relation      go to state 33
    relationterm  go to state 34
    read          go to state 104


State 153

   28 declareassign: VAR COLON datatype ASSIGN VAR $@2 VAR COLON datatype ASSIGN value .

    $default  reduce using rule 28 (declareassign)
